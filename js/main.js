// Функция, возвращающая случайное целое число из переданного диапазона включительно.
// Учтите, что диапазон может быть только положительный, включая ноль.
// А также придумайте, как функция должна вести себя, если передать значение «до» меньшее, чем значение «от», или равное ему.


function randomInteger (min, max) {
  // Проверяем, что вводимые данные являются типом number
  if  (typeof min != "number" || typeof max != "number") throw new TypeError("Переданные параметры должны быть number");

  // Проверяем, что параметры целое число
  if  (!Number.isInteger(min) || !Number.isInteger(max)) throw new TypeError("Параметры должен быть целым числом");

  // Проверяем, что минимальное значение положительное и меньше максимального
  if (min < 0 || max <= min) throw new RangeError("Параметры min и max должны соответствовать требованиям: max > min и min > 0");

  return Math.floor(Math.random() * (max - min)) + min;
}

randomInteger (50, 100);



// Функция, возвращающая случайное число с плавающей точкой из переданного диапазона включительно.
//  Будет использоваться для генерации временных географических координат в следующем задании.
//   Пример использования функции:
// имя_функции(от, до, количество_знаков_после_запятой);
 // Результат: число с плавающей точкой из диапазона "от...до" с указанным "количеством знаков после запятой"
// Учтите, что диапазон может быть только положительный, включая ноль. А также придумайте, как функция должна
// вести себя, если передать значение «до» меньшее, чем значение «от», или равное ему. Не забудьте, что в случае с дробными
// числами диапазон может быть в десятых, сотых, тысячных и т. д. долях. Например, 1.1, 1.2 — корректный диапазон.

function randomFloat (min, max, precision) {
  // Проверяем, что вводимые данные являются типом number
  if  (typeof min != "number" || typeof max != "number" || typeof precision != "number") throw new TypeError("Переданные параметры должны быть number");

  // Проверяем, что точность целое число
  if  (!Number.isInteger(precision)) throw new TypeError("Параметр 'precision' должен быть целым числом");

  // Проверяем, что минимальное значение положительное и меньше максимального
  if (min < 0 || max <= min) throw new RangeError("Параметры min и max должны соответствовать требованиям: max > min и min > 0");

  // Вводим коэффициент масштабирования для получения нужного количества знаков после запятой
  let  factor = Math.pow(10, precision);

  // Определение нахождения чисел при заданной тоночсти в заданном диапазоне
  min=Math.ceil(min*factor)/factor;
  max=Math.floor(max*factor)/factor;
  if (max <= min) throw new RangeError("В заданном диапазоне нет чисел указанной precision");

  return randomInteger(min * factor, max * factor) / factor;
  }

randomFloat (50, 100, 5);







